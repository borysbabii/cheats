% aws, ecs, ecs-cli

# list of ecs clusters
aws ecs list-clusters | jq -r '.clusterArns[]' | awk -F '/' '{print $NF}' | sort

# list of ecs services
aws ecs list-services --cluster <cluster> | jq -r '.serviceArns[]' | awk -F '/' '{print $NF}' | sort

$ cluster: aws ecs list-clusters | jq -r '.clusterArns[]' | awk -F '/' '{print $NF}' | sort

# list of ecs cluster tasks
aws ecs list-tasks --cluster <cluster>

# list of ecs service tasks in a cluster
aws ecs list-tasks --cluster <cluster> --service <service>

$ service: aws ecs list-services --cluster <cluster> | jq -r '.serviceArns[]' | awk -F '/' '{print $NF}' | sort

# Update existing service
aws ecs update-service --force-new-deployment --cluster <cluster> --service <service>

$ family: aws ecs list-task-definition-families | jq -r '.families[]' | sort

# Starts a new task using the specified task definition
aws ecs run-task \
    --cluster <cluster> \
    --count <count> \
    --enable-ecs-managed-tags \
    --launch-type FARGATE \
    --group manual \
    --network-configuration "awsvpcConfiguration={subnets=[<subnets>],securityGroups=[<securityGroups>],assignPublicIp=DISABLED}" \
    --platform-version 1.4.0 \
    --propagate-tags TASK_DEFINITION \
    --task-definition <family>

$ taskId: aws ecs list-tasks --cluster <cluster> --family <family> | jq -r '.taskArns[]' | awk -F '/' '{print $NF}'

# Retrieves container logs from CloudWatch logs
ecs-cli logs \
    --cluster <cluster> \
    --task-id <taskId> \
    --container-name <containerName> \
    --follow